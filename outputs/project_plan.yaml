project:
  name: AI Management Layer System
  summary: Extracted from PRD using fallback method
summary: Extracted from PRD using fallback method
goals:
- 'Primary Goal:'
- 2. Core Objectives
constraints: []
phases: []
modules:
- name: PlanningAgent
  purpose: Converts strategy YAML to roadmap and milestones
  inputs:
  - strategy_plan.yaml
  outputs:
  - roadmap.md
  - project_plan.yaml
  dependencies:
  - ResearchAgent
- name: ResearchAgent
  purpose: Fetches external frameworks and references
  inputs:
  - research_queries
  outputs:
  - research_summaries
  interfaces:
  - Perplexity API
- name: Orchestrator
  purpose: Controls sequencing and logging across agents
  inputs:
  - agent_registry.yaml
  outputs:
  - session_summary.md
  - logs
  dependencies:
  - All active agents
data_models:
- name: ProjectPlan
  fields:
  - goal
  - constraint
  - milestone_id
  - risk_id
- name: RiskRegister
  fields:
  - risk_id
  - description
  - mitigation
- name: StrategyPlan
  fields:
  - goals
  - constraints
  - milestones
  - priorities
tech_stack:
  backend:
  - Python 3.11
  - YAML
  - OpenAI API
  storage:
  - Local JSON/YAML files
  orchestration:
  - Logging
  - Pathlib
  - Importlib
interfaces:
- agent: PlanningAgent
  provides: plan_generation()
  consumes: strategy_plan.yaml
- agent: ResearchAgent
  provides: search(query, focus)
  consumes: research_queries
- agent: StrategyAgent
  provides: strategy_extraction()
  consumes: PRD.md
risks: []
priorities:
  must_have: []
  should_have: []
  could_have: []
  wont_have: []
generated_at: '2025-10-11 19:46:29'
