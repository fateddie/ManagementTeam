project_summary: "The Trading Strategy Reference System defines the methodology, technical\
  \ analysis framework, and risk-management logic for Rob Freyne\u2019s discretionary\
  \ swing-trading system. It serves as a foundational document for Claude and management-layer\
  \ AI agents to ensure consistency and adherence to the trader's philosophy."
goals:
- Encode trading philosophy, structure, and decision-making logic into standardized
  layers.
- Enable Claude to reference this system when generating trading plans, checklists,
  or Pine/Python modules.
- Guarantee consistency across strategy documentation, execution scripts, and dashboards.
- Facilitate future integration of journaling, macro dashboards, and real-time automation.
- Establish a clear risk management framework to protect capital and monitor exposure.
constraints:
  technical:
  - Dependence on Interactive Brokers API for trading execution.
  - Integration with TradingView API and Pine Script for charting.
  business:
  - Alignment with Rob Freyne's trading philosophy and strategies.
  timeline:
  - Completion of the project by the end of Q4 2025.
milestones:
- id: M1
  name: Interactive Brokers Integration
  description: Integrate Interactive Brokers API for trade and exposure data.
  duration_days: 14
- id: M2
  name: TradingView Integration
  description: Implement chart overlays, confluence scoring visuals, and alert system.
  duration_days: 14
- id: M3
  name: COT & Sentiment Feed Integration
  description: Add external sentiment and positioning data for bias validation.
  duration_days: 14
- id: M4
  name: Drawdown Dashboard
  description: Create unified dashboard for drawdown and exposure tracking.
  duration_days: 14
risks:
- id: R1
  description: Performance degradation under real-time data load.
  mitigation: Implement async processing and caching layers.
- id: R2
  description: External API downtime or rate-limit failures (IBKR, TradingView).
  mitigation: Add fallback data sources and circuit breakers.
- id: R3
  description: Data desynchronization between sentiment and price feeds.
  mitigation: Add time-window validation and feed prioritization rules.
priorities:
  Must-have:
  - Encode trading philosophy and decision-making logic.
  - Develop risk management framework.
  Should-have:
  - Enable Claude to generate trading plans and checklists.
  - Integrate external data feeds.
  Could-have:
  - Future integration of journaling and macro dashboards.
  Won't-have:
  - Real-time automation features in the initial release.
phases:
- id: P1
  name: Core Trading System
  duration_weeks: 6
  deliverables:
  - MethodologyEngine
  - TechnicalFramework
  - RiskManager
- id: P2
  name: Integration & Automation
  duration_weeks: 4
  deliverables:
  - Broker API
  - TradingView Integration
  - Real-time Alerts
- id: P3
  name: Advanced Features
  duration_weeks: 3
  deliverables:
  - Automated Journaling
  - Macro Dashboard
  - Voice Interface
recommended_modules:
- name: MethodologyEngine
  purpose: "Bias formation using multi-timeframe analysis (Monthly\u2192Weekly\u2192\
    Daily\u21924H)."
  inputs:
  - price_data
  - cot_data
  - sentiment_feeds
  outputs:
  - directional_bias
  - market_narrative
- name: TechnicalFramework
  purpose: "Confluence scoring (0\u201310) combining timeframe alignment, momentum,\
    \ and sentiment."
  inputs:
  - price_data
  - structure_levels
  - indicators
  outputs:
  - scored_setups
  - trade_signals
- name: RiskManager
  purpose: Drawdown monitoring (5%/10% thresholds) and damage control.
  inputs:
  - positions
  - account_balance
  - market_volatility
  outputs:
  - exposure_alerts
  - hedge_recommendations
